paths:
  /api/products:
    get:
      summary: Gets all the products
      tags:
        - Products
      responses:
        "200":
          description: Products were obtained successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Success"
        "500":
          description: Connection to the database failed.
    post:
      summary: Add a product.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/ProductAdded"
      responses:
        "200":
          description: Product added successfully.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "500":
          description: Connection to the database failed.
  /api/products/{pid}:
    get:
      summary: Gets one product
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of the required product.
          schema:
            $type: String
      responses:
        "200":
          description: Product found.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "404":
          description: Product not found.
    put:
      summary: Update a product using it's ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Required product's ID.
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/ProductUpdate"
      responses:
        "200":
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "500":
          description: Connection to the database failed.
    delete:
      summary: Delete a product using it's ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Required product's ID.
          schema:
            $type: String
      responses:
        "200":
          description: Product deleted successfully.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "500":
          description: Connection to the database failed.
components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: String
          description: success or error
        message:
          type: String
          description: Explaining what went wrong.
      example:
        status: success
        message: User updated
    Products:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generated by mongo
        title:
          type: String
          description: Product name
        description:
          type: String
          description: Description of the product
        price:
          type: String
          description: Product price
        thumbnail:
          type: String
          description: Product image
        code:
          type: String
          description: Product private code
        stock:
          type: String
          description: Product quantity
        category:
          type: String
          description: Product category
        owner:
          type: String
          description: Email of the person who posted the product
      example:
        _id: ObjectId("644081a93f0625dc193bc594")
        title: Coke
        description: Cola soda
        price: 100
        thumbnail: fxdhxdfhxfd.png
        code: aws567
        stock: 10
        category: 1
        owner: cocacola@cocacola.com
  requestBodies:
    ProductUpdate:
      type: object
      properties:
        title:
          type: String
          description: Product name
        description:
          type: String
          description: Description of the product
        price:
          type: String
          description: Product price
        thumbnail:
          type: String
          description: Product image
        code:
          type: String
          description: Product private code
        stock:
          type: String
          description: Product quantity
      example:
        title: Coke
        description: Cola soda
        price: 100
        thumbnail: fxdhxdfhxfd.png
        code: aws567
        stock: 10
    ProductAdded:
      type: object
      properties:
        title:
          type: String
          description: Product name
        description:
          type: String
          description: Description of the product
        price:
          type: String
          description: Product price
        thumbnail:
          type: String
          description: Product image
        code:
          type: String
          description: Product private code
        stock:
          type: String
          description: Product quantity
        category:
          type: String
          description: Product category
      example:
        title: Coke
        description: Cola soda
        price: 100
        thumbnail: fxdhxdfhxfd.png
        code: aws567
        stock: 10
        category: 1